# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  workflow_call:
    inputs:
      extensions:
        required: false
        type: string
        default: ""
      ini-values:
        required: true
        type: string
      composer-options:
        required: true
        type: string
      composer-outdated-option:
        required: false
        type: string
        default: ""
    secrets:
      envPAT:
        required: true
    outputs:
      extensions:
        value: ${{ jobs.supported-versions-matrix.outputs.extensions }}
      version:
        value: ${{ jobs.supported-versions-matrix.outputs.version }}
      version-all:
        value: ${{ jobs.supported-versions-matrix.outputs.version-all }}
      upcoming:
        value: ${{ jobs.supported-versions-matrix.outputs.upcoming }}

jobs:
  supported-versions-matrix:
    name: "Supported Versions Matrix"

    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    continue-on-error: false

    outputs:
      extensions: ${{ steps.supported-versions-matrix.outputs.extensions }}
      version: ${{ steps.supported-versions-matrix.outputs.version }}
      version-all: ${{ steps.supported-versions-matrix-all.outputs.version }}
      upcoming: ${{ steps.supported-versions-matrix-all.outputs.upcoming }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "detect supported versions without upcoming versions"
        id: "supported-versions-matrix"
        uses: "WyriHaximus/github-action-composer-php-versions-in-range@v1"
        with:
          upcomingReleases: false

      - name: "detect supported versions with upcoming versions"
        id: "supported-versions-matrix-all"
        uses: "WyriHaximus/github-action-composer-php-versions-in-range@v1"
        with:
          upcomingReleases: true

  validate:
    name: "Validate composer"

    needs: "supported-versions-matrix"

    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.22.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"

      - name: "Validate composer.json"
        run: "composer validate --strict"

  install:
    name: "Install dependencies"

    needs:
      - "supported-versions-matrix"
      - "validate"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: ${{ needs.supported-versions-matrix.outputs.upcoming == matrix.php-version }}

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version-all) }}

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.22.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"

      - name: "Update dependencies with composer"
        if: ${{ needs.supported-versions-matrix.outputs.upcoming != matrix.php-version }}
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Update dependencies with composer"
        if: ${{ needs.supported-versions-matrix.outputs.upcoming == matrix.php-version }}
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }} --ignore-platform-reqs"

      - name: "Check dependencies with composer"
        run: "composer outdated --direct${{ inputs.composer-outdated-option }}"

  mega-lint:
    name: "Linting with nvuillam/mega-linter"

    needs:
      - "supported-versions-matrix"
      - "install"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.22.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Linter"
        # You can override Mega-Linter flavor used to have faster performances
        # More info at https://nvuillam.github.io/mega-linter/flavors/
        uses: "nvuillam/mega-linter/flavors/php@v6.16.0"
        env:
          GITHUB_TOKEN: ${{ secrets.envPAT }}

  php-lint:
    name: "Linting with overtrue/phplint"

    needs:
      - "supported-versions-matrix"
      - "install"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.22.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"

      - name: "Lint PHP"
        uses: "overtrue/phplint@8.2"

  php-cs-fixer:
    name: "Check Coding Standards with PHP-CS-Fixer"

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        #php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.22.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, cs2pr"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run friendsofphp/php-cs-fixer"
        run: "vendor/bin/php-cs-fixer fix --dry-run -vv --diff"
        continue-on-error: true

      - name: "Run friendsofphp/php-cs-fixer"
        run: "vendor/bin/php-cs-fixer fix --dry-run --format=checkstyle | cs2pr"

  phpcs:
    name: "Check Coding Standards with PHPCS"

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.22.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, cs2pr"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run squizlabs/php_codesniffer"
        run: "vendor/bin/phpcs --report=checkstyle -q | cs2pr"

  static-code-analysis:
    name: "Static Code Analysis with PHPStan"

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.22.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run phpstan/phpstan"
        run: "vendor/bin/phpstan analyse -c phpstan.neon --memory-limit=768M --no-progress"
