# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

# file-version: 1.0

name: "Continuous Integration"

on:
  - pull_request
  - push

permissions:
  contents: read

concurrency:
  group: "${{ github.event_name }}-${{ github.workflow }}-${{ github.head_ref || github.run_id }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  validate:
    name: "Validate Project"

    uses: "mimmi20/ci/.github/workflows/validate.yml@master"
    with:
      extensions: "ctype, curl, dom, iconv, intl, mbstring, simplexml, tokenizer, xml, xmlwriter"
      ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
      composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"
      skip-validate-composer: true
      skip-phplint: true
      skip-check-composer: true

  tests:
    name: "UnitTests with vitest"

    needs:
      - "validate"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        node-version:
          - "18"
          - "20"
          - "21"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "install libimagequant-dev"
        run: "sudo apt-get install libimagequant-dev -y"

      - name: "Use Node.js ${{ matrix.node-version }}"
        uses: "actions/setup-node@v4"
        with:
          node-version: "${{ matrix.node-version }}"

      - name: "install dependencies"
        run: "npm install"

      - name: "Run tests and generate coverage report"
        run: "npm run coverage"

      - name: "Upload coverage report to Codecov"
        uses: "codecov/codecov-action@v4.3.0"
        with:
          fail_ci_if_error: true
          file: ".reports/clover.xml"
          flags: "vitest,nodejs-${{ matrix.node-version }},${{ matrix.operating-system }}"
          verbose: false
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"

      - name: "Upload coverage to Codeclimate"
        uses: "paambaati/codeclimate-action@v6.0.0"
        env:
          CC_TEST_REPORTER_ID: "${{ secrets.CODECLIMATE_API_KEY }}"
        with:
          coverageLocations: ".reports/clover.xml:clover"
          debug: false

      - name: "Upload coverage to Coveralls"
        uses: "coverallsapp/github-action@v2"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          flag-name: "nodeJS ${{ matrix.node-version }} on ${{ matrix.operating-system }}"
          parallel: true
          file: ".reports/clover.xml"
          format: "clover"
          debug: false

  finish-code-coverage:
    runs-on: "ubuntu-22.04"

    needs: "tests"

    if: always()

    steps:
      - name: "Coveralls Finished"
        uses: "coverallsapp/github-action@v2"
        with:
          parallel-finished: true

  # This is a meta job to avoid to have to constantly change the protection rules
  # whenever we touch the matrix.
  tests-status:
    name: "Unit & Integration Tests Status"

    runs-on: "ubuntu-22.04"

    if: always()

    needs:
      - "tests"

    steps:
      - name: Successful run
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0

      - name: Failing run
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
